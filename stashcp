#!/bin/bash

usage="$(basename "$0") [-d] [-r] [-h] -s <source> [-l <location to be copied to>]

	-d: show debugging information
	-r: recursively copy
	-h: show this help text"

debug=0
file=""
loc="."
recursive=0
if [ "$#" -eq 0 ]; then
	echo "$usage"
	exit
fi

while getopts ":drhs:l:" opt; do
    case $opt in 
	h)
	    echo "$usage"
	    exit
	    ;;
	d)
	    debug=2
	    ;;
	s)
	    source=$OPTARG
	    ;;
	r)
	    recursive=1
	    ;;
	l)
	    loc=$OPTARG
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    echo "$usage" >&2
	    exit 1
	    ;;
    esac
done

echo "$(date): Got opts"

if [ $debug -eq 2 ]; then
	xrdargs="-d 1 --nopbar"
else
	xrdargs="-s"
fi

#set prefix to proper format
lcs=$(echo "${STASHPREFIX: -1}")
echo $lcs
if [ $lcs == "/" ]; then
	myprefix=$(echo $STASHPREFIX | rev | cut -c 2- | rev)
	echo "Changing $STASHPREFIX to $myprefix"
else
	myprefix=$STASHPREFIX
	echo "Keeping the $myprefix"
fi
if [ ${#myprefix} -lt 3 ]; then
    myprefix="root://data.ci-connect.net"
	echo "Empty prefix; changing to $myprefix"
fi
if [ $debug -eq 2 ]; then
    echo "I think my STASHPREFIX is $STASHPREFIX"
    echo "I think my prefix is $myprefix"
fi

#check to see if chosen path is a file or directory
#echo "xrdfs $myprefix stat $source"
isdir=$(xrdfs root://data.ci-connect.net stat $source | grep "IsDir" | wc -l)
#echo $isdir

if [ $isdir -eq 0 ]; then
	files=($source)
else
	files=$(xrdfs root://data.ci-connect.net ls $source)
	lc=$(echo "${source: -1}")
	if [ $lc == "/" ]; then
		dirname=$(echo $source | rev | cut -d/ -f2 | rev)
	else
		dirname=$(echo $source | rev | cut -d/ -f1 | rev)
	fi
	loc=$loc/$dirname
	mkdir -p $loc
fi

#try pulling from closest cache
#if xrdcp doesn't finish in 30 minutes, stop
for file in ${files[@]}; do
	st1=$(date)
	echo "Pulling $file"
	fisdir=$(xrdfs root://data.ci-connect.net stat $file | grep "IsDir" | wc -l)
	if [ $fisdir -ne 0 ]; then
		if [ $recursive -eq 1 ]; then
			if [ $debug -eq 2 ]; then
				fl="-d"
			else
				fl=""
			fi
			bash ./stashcp $fl -s $file -l $loc 
		fi
		continue
	fi
	echo "timeout 30m xrdcp $xrdargs -f $myprefix://$file $loc 2>&1"
	timeout 30m xrdcp $xrdargs -f $myprefix://$file $loc 2>&1
	res=$?
	dl1=$(date)
	##check to see if the pull worked, and file exists and has non-zero size
	##if not, pull from trunk
	myfile=$(echo $file | rev | cut -d/ -f1 | rev)
	if [ $res -ne 0 ] || [ ! -s $loc/$myfile ]; then
		if [ $debug -eq 2 ]; then		
			echo "Pull from $myprefix failed."
			echo "Trying to pull from trunk."
		fi
		st2=$(date)
		timeout 30m xrdcp $xrdargs -f root://data.ci-connect.net://$file $loc 2>&1
		res=$?
		dl2=$(date)
		if [ $res -ne 0 ] || [ ! -s $loc/$myfile ]; then				
			echo "Stashcp of $file failed."
		elif [ $debug -eq 2 ]; then
			echo "Pull from trunk was successful."
			echo $(stat --printf="%s" $loc/$myfile)
			echo $st2
			echo $dl2
		fi
	elif [ $debug -eq 2 ]; then		
		echo "Pull of $myfile from $myprefix was successful."
		echo $(stat --printf="%s" $loc/$myfile)
		echo $st1
		echo $dl1
	fi
done
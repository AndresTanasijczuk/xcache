#
# Configure authorization for the StashCache cache server.
#
# **********************************************************************
# * WARNING: DO NOT EDIT THIS FILE.  IT WILL BE OVERWRITTEN ON UPGRADE *
# **********************************************************************
#
# This file is part of the StashCache Daemon
# https://opensciencegrid.github.io/StashCache-Daemon

# Enable the authorization module, even if we have an unauthenticated instance.
ofs.authorize 1
# Log both successes and failures in authorization.
acc.audit deny grant

# Allow connections from all hosts; sec.protocol is overwritten later.
xrd.allow host *
sec.protocol host


# Apply the auto-generated cache authorizations only in the case
# where we are one of the two StashCache templates.
if named stashcache-cache-server-auth

   xrootd.seclib /usr/lib64/libXrdSec.so

   # Set libXrdLcmaps to be used only to invoke Globus and libvoms
   # to verify the proxy; authorizations will be handled internally.
   sec.protbind * gsi
   sec.protocol /usr/lib64 gsi \
     -certdir:/etc/grid-security/certificates \
     -cert:/etc/grid-security/xrd/xrdcert.pem \
     -key:/etc/grid-security/xrd/xrdkey.pem \
     -crl:1 \
     -authzfun:libXrdLcmaps.so \
     -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--no-authz \
     -gmapopt:0 \
     -authzto:3600

   # This authfile is automatically generated by stashcache-authfile.service
   acc.authdb /run/stashcache-cache-server-auth/Authfile

   # Proxy cert for retrieving data from origin servers
   setenv X509_USER_PROXY = /run/stashcache-cache-server-auth/x509_proxy

else if named stashcache-cache-server
   # The unauthenticated instance uses a separate auth file from the
   # authenticated instance; file is generated by stashcache-authfile-public.service
   acc.authdb /run/stashcache-cache-server/Authfile
   sec.protbind * none
fi


# Authorizations for remote debugging; this file does not currently ship with
# the OSG packaging; see SOFTWARE-3490.
xrootd.diglib * /etc/xrootd/digauth.cfg

